query getUserQuery($sub: String!) {
  users(where: {sub: {_eq: $sub}}) {
    id
    name
    email
    sub
    imageUrl
  }
}

query getUserById($id: Int!) {
  users_by_pk(id: $id) {
    id
    name
    email
    sub
    imageUrl
    lendingHistories {
      bookId
      returnHistories_aggregate {
        aggregate {
          count
        }
      }
    }
  }
}

query getUsers {
  users(order_by: {createdAt: desc}) {
    id
    name
    email
    sub
    imageUrl
    lendingHistories {
      returnHistories_aggregate {
        aggregate {
          count
        }
      }
    }
  }
}

mutation insertUserQuery($name: String!, $email: String!, $sub: String!, $imageUrl: String) {
  insert_users(objects: {name: $name, email: $email, sub: $sub, imageUrl: $imageUrl}) {
    returning {
      id
      name
      email
      sub
      imageUrl
    }
  }
}

query getBookById($id: Int!) {
  books_by_pk(id: $id) {
    id
    title
    isbn
    imageUrl
    createdAt
  }
}

query getBooks($keyword: String!) {
  books(where: {title: {_ilike: $keyword}}) {
    id
    title
    isbn
    imageUrl
    createdAt
  }
}

query getBooksByIds($ids: [Int!]) {
  books(where: {id: {_in: $ids}}) {
    id
    title
    isbn
    imageUrl
    createdAt
  }
}

mutation insertBook($title: String!, $isbn: String!, $imageUrl: String) {
  insert_books_one(object: {title: $title, isbn: $isbn, imageUrl: $imageUrl}) {
    id
  }
}

mutation insertRegistrationHistory($bookId: Int!, $userId: Int!) {
  insert_registrationHistories_one(object: {bookId: $bookId, userId: $userId}) {
    id
  }
}

query getBook($id: Int!) {
  books(where: {id: {_eq: $id}}) {
    id
    title
    isbn
    imageUrl
    registrationHistories {
      userId
      createdAt
    }
    lendingHistories {
      id
      createdAt
      dueDate
      user {
        id
        name
        imageUrl
      }
      returnHistories {

        createdAt
      }
    }
    reservations {
      userId
      reservationDate
      createdAt
    }
  }
}

query getBookByIsbn($isbn: String!) {
  books(where: {isbn: {_eq: $isbn}}) {
    id
    title
    isbn
    imageUrl
    registrationHistories {
      userId
      createdAt
    }
    lendingHistories {
      id
      createdAt
      dueDate
      user {
        id
        name
        imageUrl
      }
      returnHistories {

        createdAt
      }
    }
    reservations {
      userId
      reservationDate
      createdAt
    }
  }
}

mutation postLendingHistory($userId: Int!, $bookId: Int!, $dueDate: date!) {
  insert_lendingHistories_one(object: {userId: $userId, bookId: $bookId, dueDate: $dueDate}) {
    userId
    bookId
    dueDate
  }
}

mutation postReturnHistory($lendingHistoryId: Int!) {
  insert_returnHistories_one(object: { lendingHistoryId: $lendingHistoryId }) {
    id
    lendingHistory {
      userId
      bookId
    }
  }
}

query getImpressions($bookId: Int!) {
  impressions(where: {bookId: {_eq: $bookId}}) {
    id
    user {
      name
      imageUrl
    }
    impression
    createdAt
    updatedAt
  }
}

mutation postImpression($userId: Int!, $bookId: Int!, $impression: String!) {
  insert_impressions_one(object: { userId: $userId, bookId: $bookId, impression: $impression }) {
    id
  }
}
